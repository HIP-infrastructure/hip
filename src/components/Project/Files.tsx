import { Upload } from '@mui/icons-material'
import { LoadingButton } from '@mui/lab'
import {
	Box, CardMedia,
	Paper,
	Tab,
	Tabs,
	Typography
} from '@mui/material'
import React, { useEffect, useState } from 'react'
import { API_GATEWAY } from '../../api/gatewayClientAPI'
import {
	getProjectMetadataTree, importDocument
} from '../../api/projects'
import { InspectResult } from '../../api/types'
import { useNotification } from '../../hooks/useNotification'
import { useAppStore } from '../../Store'
import MetadataBrowser from '../UI/MetadataBrowser'
import TitleBar from '../UI/titleBar'
import FileBrowser from './Files/FileBrowser'
import TransferMetadataBrowser from './Files/MetadataBrowser'

const Data = () => {
	const { showNotif } = useNotification()
	const {
		selectedProject: [selectedProject],
	} = useAppStore()
	const [files, setFiles] = useState<InspectResult>()
	const [tabIndex, setTabIndex] = useState(0)
	const [path] = useState<string>('/')
	const [sourceSelected, setSourceSelected] = useState<string>()
	const [targetSelected, setTargetSelected] = useState<string>()
	const [loading, setLoading] = useState(false)
	const [transfered, setTransfered] = useState(false)

	useEffect(() => {
		if (selectedProject) {
			getProjectMetadataTree(selectedProject.name).then(f => setFiles(f))
		}
	}, [selectedProject])

	const handleImportDocument = () => {
		if (!selectedProject?.name) return

		if (!sourceSelected) {
			showNotif('You need to select a source document', 'warning')
			return
		}
		if (!targetSelected) {
			showNotif('You need to select a target folder', 'warning')
			return
		}

		setLoading(true)
		setTransfered(false)

		importDocument(
			{ sourceFilePath: sourceSelected, targetDirPath: targetSelected },
			selectedProject?.name || ''
		)
			.then(() => {
				showNotif('Document imported', 'success')
				getProjectMetadataTree(selectedProject.name).then(f => setFiles(f))
				setLoading(false)
				setTimeout(() => setTransfered(true), 1000)
			})
			.catch(e => {
				showNotif(`${e}`, 'error')
				setLoading(false)
			})
	}

	return (
		<Box sx={{ mb: 2 }}>
			<TitleBar title={`Files: ${selectedProject?.title || ''} `} />

			<Box sx={{ mt: 2 }}>
				<Box elevation={2} component={Paper} sx={{ mt: 2, mb: 2 }}>
					<CardMedia
						component='img'
						height='160'
						title={
							'Image generated by DreamStudio, Text-to-Image Generative Art, https://beta.dreamstudio.ai/dream'
						}
						src={`${API_GATEWAY}/public/media/3281435885_dendrites__technology__meta___database__information__network__neural_path__futuristic_and_medical__r.png`}
					/>
				</Box>

				<Tabs
					value={tabIndex}
					onChange={(event: React.SyntheticEvent, newValue: number) =>
						setTabIndex(newValue)
					}
					aria-label='Matadata tabs'
				>
					<Tab label='Files' id={'tab-1'} />
					<Tab label='Transfer Files' id={'tab-2'} />
				</Tabs>

				{tabIndex === 0 && (
					<Box sx={{ mt: 2 }}>
						<Box elevation={2} component={Paper} sx={{ p: 1, flex: '1 0' }}>
							<Typography variant='h6'>Files</Typography>
							<Typography sx={{ mb: 2 }}>
								You are currently viewing the metadata of the project file tree
								hierarchy because the content within the files is private in
								nature. The metadata provides information about the files, but
								does not disclose the actual content contained within. This is
								done to maintain the privacy and security of the information
								within the files.
							</Typography>
							<Box
								sx={{
									display: 'flex',
									flexWrap: 'wrap',
									gap: '16px 16px',
									mt: 2,
								}}
							>
								<MetadataBrowser files={files} />
							</Box>
						</Box>
					</Box>
				)}

				{tabIndex === 1 && (
					<Box sx={{ mt: 2 }}>
						<Typography variant='h6'>Transfer Files</Typography>
						<Typography sx={{ mb: 2 }}>
							Select a source document on the left and a target directory on the
							right then click import
						</Typography>
						<Box
							sx={{
								display: 'flex',
								flexWrap: 'wrap',
								gap: '16px 16px',
								alignItems: 'start',
								mt: 2,
							}}
						>
							<Box elevation={2} component={Paper} sx={{ p: 1, flex: '1 0' }}>
								<Typography gutterBottom variant='h6' component='div'>
									My Files
								</Typography>

								{path && (
									<FileBrowser
										path={path}
										setSelected={setSourceSelected}
										showSearch={true}
										unselect={transfered}
									/>
								)}
							</Box>
							<Box>
								<LoadingButton
									color='primary'
									size='small'
									sx={{ my: 0.5 }}
									disabled={!sourceSelected || !targetSelected}
									onClick={handleImportDocument}
									loading={loading}
									loadingPosition='start'
									startIcon={<Upload />}
									variant='outlined'
								>
									Import
								</LoadingButton>
							</Box>
							<Box elevation={2} component={Paper} sx={{ p: 1, flex: '1 0' }}>
								<Typography gutterBottom variant='h6' component='div'>
									Project Files
								</Typography>

								<TransferMetadataBrowser
									files={files}
									setSelected={setTargetSelected}
									unselect={transfered}
								/>
							</Box>
						</Box>
					</Box>
				)}
			</Box>
		</Box>
	)
}

export default Data
